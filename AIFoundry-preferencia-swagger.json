{
  "openapi": "3.0.4",
  "info": {
    "title": "Preference API - Read Only",
    "description": "API somente leitura para consultar preferências/gostos de pessoas baseado em seus nomes. Esta API fornece acesso aos dados de preferências de forma segura e eficiente.",
    "version": "v1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://hiropreferencia.azurewebsites.net/",
      "description": "Production server"
    }
  ],
  "paths": {
    "/api/Preference/{name}": {
      "get": {
        "tags": [
          "Preference"
        ],
        "summary": "Obter preferência por nome",
        "description": "Recupera as preferências de uma pessoa específica com base no seu nome",
        "operationId": "getPreferenceByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Nome da pessoa para buscar as preferências",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "example": "João"
          }
        ],
        "responses": {
          "200": {
            "description": "Preferência encontrada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonPreference"
                },
                "example": {
                  "name": "João",
                  "preference": "Pizza",
                  "category": "Comida",
                  "description": "Adora pizza de calabresa com borda recheada"
                }
              }
            }
          },
          "404": {
            "description": "Preferência não encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Preference": {
      "get": {
        "tags": [
          "Preference"
        ],
        "summary": "Listar todas as preferências",
        "description": "Recupera uma lista de todas as preferências cadastradas no sistema com opções de filtro e paginação",
        "operationId": "getAllPreferences",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "description": "Filtrar por categoria de preferência",
            "schema": {
              "type": "string",
              "enum": ["Comida", "Música", "Filme", "Livro", "Esporte", "Viagem", "Hobby", "Outro"]
            },
            "example": "Comida"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Número máximo de resultados a retornar",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            },
            "example": 10
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "description": "Número de registros para pular (paginação)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            },
            "example": 0
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "description": "Buscar por nome ou preferência (busca parcial)",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "example": "João"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de preferências recuperada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PersonPreference"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/PaginationInfo"
                    }
                  },
                  "required": ["data", "pagination"]
                },
                "example": {
                  "data": [
                    {
                      "name": "João",
                      "preference": "Pizza",
                      "category": "Comida",
                      "description": "Adora pizza de calabresa"
                    },
                    {
                      "name": "Maria",
                      "preference": "Rock",
                      "category": "Música",
                      "description": "Fã de rock clássico"
                    }
                  ],
                  "pagination": {
                    "total": 2,
                    "limit": 50,
                    "offset": 0,
                    "hasNext": false,
                    "hasPrevious": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros de consulta inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PersonPreference": {
        "type": "object",
        "required": ["name", "preference", "category"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome da pessoa",
            "minLength": 1,
            "maxLength": 100,
            "example": "João Silva"
          },
          "preference": {
            "type": "string",
            "description": "Preferência ou gosto da pessoa",
            "minLength": 1,
            "maxLength": 200,
            "example": "Pizza Margherita"
          },
          "category": {
            "type": "string",
            "description": "Categoria da preferência",
            "enum": ["Comida", "Música", "Filme", "Livro", "Esporte", "Viagem", "Hobby", "Outro"],
            "example": "Comida"
          },
          "description": {
            "type": "string",
            "description": "Descrição detalhada da preferência",
            "maxLength": 500,
            "example": "Adora pizza margherita com manjericão fresco e massa fina"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data e hora de criação do registro",
            "readOnly": true,
            "example": "2024-01-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data e hora da última atualização",
            "readOnly": true,
            "example": "2024-01-20T15:45:00Z"
          }
        },
        "additionalProperties": false
      },
      "PaginationInfo": {
        "type": "object",
        "required": ["total", "limit", "offset", "hasNext", "hasPrevious"],
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total de registros disponíveis",
            "minimum": 0,
            "example": 25
          },
          "limit": {
            "type": "integer",
            "description": "Limite aplicado na consulta",
            "minimum": 1,
            "example": 10
          },
          "offset": {
            "type": "integer",
            "description": "Offset aplicado na consulta",
            "minimum": 0,
            "example": 0
          },
          "hasNext": {
            "type": "boolean",
            "description": "Indica se há próxima página",
            "example": true
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Indica se há página anterior",
            "example": false
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": ["error", "message", "timestamp"],
        "properties": {
          "error": {
            "type": "string",
            "description": "Código do erro",
            "enum": ["PREFERENCE_NOT_FOUND", "INVALID_PARAMETER", "VALIDATION_ERROR", "INTERNAL_ERROR"],
            "example": "PREFERENCE_NOT_FOUND"
          },
          "message": {
            "type": "string",
            "description": "Mensagem descritiva do erro",
            "example": "A preferência solicitada não foi encontrada"
          },
          "details": {
            "type": "object",
            "description": "Detalhes adicionais sobre o erro",
            "additionalProperties": true,
            "example": {
              "field": "name",
              "rejectedValue": ""
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp do erro",
            "example": "2024-01-15T10:30:00Z"
          },
          "path": {
            "type": "string",
            "description": "Caminho da requisição que gerou o erro",
            "example": "/api/Preference/João"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "Chave de API para autenticação"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token JWT para autenticação"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Preference",
      "description": "Operações de consulta para preferências de pessoas (somente leitura)"
    }
  ]
}